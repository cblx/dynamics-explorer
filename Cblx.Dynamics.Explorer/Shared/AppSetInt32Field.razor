@using System.Net.Http.Json;
@using System.Text.Json.Nodes;
@using Cblx.Dynamics.Explorer.Models;
@inject HttpClient HttpClient
@if(Options != null)
{
    <MudSelect @bind-Value="Set.ValueAsInt32"
               Variant="Variant.Outlined"
               Placeholder="NULL"
               HelperText="@Set.ValueHelperText"
               Label="Value">
        <MudSelectItem Value="(int?)null">null</MudSelectItem>
        @foreach (var option in Options)
        {
            <MudSelectItem Value="@((int?)option.Value)">@option.Text</MudSelectItem>
        }
    </MudSelect>
}
else{
    <MudNumericField @bind-Value="Set.ValueAsInt32"
                     Variant="Variant.Outlined"
                     Placeholder="NULL"
                     HelperText="@Set.ValueHelperText"
                     Label="Value" />
}
@code {
    [Parameter]
    [EditorRequired]
    public required EditDialogSet Set { get; set; }
    private PicklistOption[]? Options = null;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            JsonObject? json = null;
            if (Set.Column.OriginalName == "statuscode")
            {
                json = await HttpClient.GetFromJsonAsync<JsonObject>($"EntityDefinitions(LogicalName='{Set.Column.Table.OriginalName}')/Attributes(LogicalName='statuscode')/Microsoft.Dynamics.CRM.StatusAttributeMetadata?$select=LogicalName&$expand=OptionSet($select=Options)");
            }
            else if (Set.Column.OriginalName == "statecode")
            {
                json = await HttpClient.GetFromJsonAsync<JsonObject>($"EntityDefinitions(LogicalName='{Set.Column.Table.OriginalName}')/Attributes(LogicalName='statecode')/Microsoft.Dynamics.CRM.StateAttributeMetadata?$select=LogicalName&$expand=OptionSet($select=Options)");
            }
            else
            {
                json = await HttpClient.GetFromJsonAsync<JsonObject>($"EntityDefinitions(LogicalName='{Set.Column.Table.OriginalName}')/Attributes(LogicalName='{Set.Column.OriginalName}')/Microsoft.Dynamics.CRM.PicklistAttributeMetadata?$select=LogicalName&$expand=OptionSet($select=Options)");
            }
            Options = json["OptionSet"]["Options"]
                .AsArray()
                .Select(j => new PicklistOption
                {
                    Text = j["Label"]["LocalizedLabels"][0]["Label"].GetValue<string>(),
                    Value = j["Value"].GetValue<int>()
                }).ToArray();
        }catch{}
    }
}
