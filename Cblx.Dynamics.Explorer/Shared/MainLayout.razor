@using Cblx.Dynamics.Explorer.Services;
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AppBarService AppBarService
<MudThemeProvider IsDarkMode="true" />
<MudDialogProvider />
<MudSnackbarProvider />
<PageTitle>DynamicsExplorer</PageTitle>

<MudLayout>
    <MudAppBar Dense>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        @_appBarContent
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <ErrorBoundary @ref="_errorBoundary">
            <ErrorContent>
                <MudAlert Severity="Severity.Error" Variant="Variant.Filled">
                    @context.Message
                </MudAlert>
            </ErrorContent>
            <ChildContent>
                @Body
            </ChildContent>
        </ErrorBoundary>
    </MudMainContent>
</MudLayout>
@code {
    bool _drawerOpen = true;
    private ErrorBoundary? _errorBoundary;
    private RenderFragment? _appBarContent;

    protected override void OnInitialized()
    {

        NavigationManager.LocationChanged += (_, _) => _errorBoundary?.Recover();
        AppBarService.OnContentChanged += () =>
        {
            if (_appBarContent != AppBarService.Content)
            {
                _appBarContent = AppBarService.Content;
                InvokeAsync(() => StateHasChanged());
            }
        };
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}