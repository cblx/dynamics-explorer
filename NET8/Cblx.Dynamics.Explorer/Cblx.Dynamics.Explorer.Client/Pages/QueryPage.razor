@page "/"
@using System.Net.Http.Json;
@using System.Text.Json.Nodes;
@using System.Text.Json;
@using System.Text.RegularExpressions;
@using System.Web;
@using Cblx.Dynamics.Explorer.Services.DynamicsServices.ExecuteQuery;
@using Microsoft.Fast.Components.FluentUI;
@inject IExecuteQueryHandler Handler
<PageTitle>Query</PageTitle>
<SectionContent SectionName="app-bar-content">
    Query
</SectionContent>
<FluentGrid Style="padding: 16px;">
    <FluentGridItem xs="12">
        <FluentTextArea Style="width: 100%" Rows="10" @bind-Value="_query">GET</FluentTextArea>
    </FluentGridItem>
    <FluentGridItem xs="12">
        <FluentButton Disabled="_searching" Variant="Variant.Filled" OnClick="RunAsync">Run</FluentButton>
    </FluentGridItem>
    @if (_searching)
    {
        <FluentGridItem xs="12">
            <FluentProgressRing/>
        </FluentGridItem>
    }
    else
    {
        <FluentGridItem xs="12">
        @if (_error != null)
        {
            @_error
        }
        else
        {
            <FluentCard>
                <Virtualize Items="_json">
                    <div style="white-space: pre">
                        @context
                    </div>
                </Virtualize>
            </FluentCard>
        }
        </FluentGridItem>
    }
</FluentGrid>
@code {
    private string _query = "accounts";
    private string[] _json = Array.Empty<string>();
    private bool _searching = false;
    private string? _error = null;
    public async Task RunAsync()
    {
        _searching = true;
        _error = null;
        try
        {
            var json = await Handler.GetAsync(_query);
            var strJson = JsonSerializer.Serialize(json, new JsonSerializerOptions { WriteIndented = true });
            _json = strJson.ToString().Split(Environment.NewLine);
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _searching = false;
        }
    }
}
