@page "/"
@using System.Net.Http.Json;
@using System.Text.Json.Nodes;
@using System.Text.Json;
@using System.Text.RegularExpressions;
@using System.Web;
@using Cblx.Dynamics.Explorer.Services.DynamicsServices.ExecuteQuery;
@implements IAsyncDisposable
@inject IExecuteQueryHandler Handler
@inject IJSRuntime JS
<PageTitle>Query</PageTitle>
<SectionContent SectionName="app-bar-content">
    Query
</SectionContent>
<FluentSplitter 
    Style="height: 100%; overflow: hidden"
    Orientation="Orientation.Vertical" 
    OnResized="OnResized"
    Panel1Size="50%" 
    Panel2Size="50%">
    <Panel1>
        <div style="height: 100%; overflow: hidden">
            <div @ref="_editorContainer" style="height: 100%"></div>
        </div>
    </Panel1>
    <Panel2>
        REsultado da consulta
    </Panel2>
</FluentSplitter>
@code {
    private string _query = "accounts";
    private string[] _json = Array.Empty<string>();
    private string _strJson = "";
    private bool _searching = false;
    private string? _error = null;

    private IJSObjectReference? _queryPageModule;
    private IJSObjectReference? _editorJsReference;
    private ElementReference? _editorContainer;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _queryPageModule = await JS.InvokeAsync<IJSObjectReference>("import", $"./Pages/{nameof(QuerySqlPage)}.razor.js");
            _editorJsReference = await _queryPageModule.InvokeAsync<IJSObjectReference>($"{nameof(QuerySqlPage)}.initializeEditor", _editorContainer);
        }
    }

    private async Task OnResized(SplitterResizedEventArgs _)
    {
        if(_editorJsReference is null){ return; }
        await _editorJsReference.InvokeVoidAsync("layout");
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (_queryPageModule is not null)
        {
            await _queryPageModule.DisposeAsync();
        }
        if (_editorJsReference is not null)
        {
            await _editorJsReference.DisposeAsync();
        }
    }
}
